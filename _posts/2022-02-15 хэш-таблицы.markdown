---
layout: post
title:  "Хэш-таблицы(изучаю структуры данных)"
date:   2022-02-15 00:00:00 +0000
categories: python algorithms
---
[id_1]: https://github.com/NikLaz25/Algorithms_1/blob/main/HashTable_1.py
[id_2]: https://github.com/NikLaz25/Algorithms_1/blob/main/HashTable_test_1.py

Осваиваю хэш-таблицы(ХТ)  и хэш-функции(ХФ).
Идея хт - по значению элемента получение его индекса за О(1).
ХФ вычисляет слот. Подбирают оптимальную ХФ для минимизации коллизий ( когда несколько разных значений претендуют на один слот). 
Существуют разные методы разрешения коллизий: метод линейного разрешения, метод цепочек и т.д. 

Реализованы следующие методы:
*	    def __init__(self, sz, stp):
	        '''Конструктор'''

*	    def hash_fun(self, value): # в качестве value поступают строки!
	        '''по входному значению вычисляет индекс слота'''

*	    def seek_slot(self, value):
	        '''функцию поиска слота - по входному значению сперва рассчитывает индекс хэш-функцией,
	        а затем отыскивает подходящий слот для него с учётом коллизий,
	        или возвращает None, если это не удалось'''

*	    def put(self, value):
	        '''помещает значение value в слот,
	        вычисляемый с помощью функции поиска'''

*	    def find(self, value):
	        '''проверяет, имеется ли в слотах указанное значение,
            и возвращает либо слот, либо None'''


[Ссылка на мой код] [id_1]


[Ссылка на тесты] [id_2]




