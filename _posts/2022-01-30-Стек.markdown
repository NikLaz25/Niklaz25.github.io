---
layout: post
title:  "Стек (изучаю структуры данных)"
date:   2022-01-30 00:00:00 +0000
categories: python algorithms
---
[id_1]: https://github.com/NikLaz25/Algorithms_1/blob/main/stack_1_5.py
[id_2]: https://github.com/NikLaz25/Algorithms_1/blob/main/stack_test_1.py
[id_3]: https://github.com/NikLaz25/Algorithms_1/blob/main/stack_1_6.py


Реализовал класс Stack

В качестве подходящей динамической структуры выбран  стандартный список python.
Реализованы методы size(), pop(), push() и peek()
* def size(self) -> int:
        '''размер стека'''
* def pop(self) -> Optional[list]: #мера сложности О(n)
        '''вернуть'''
* def push(self, value: int) -> Optional[list]: #мера сложности О(1)
        '''вставить'''
* def peek(self) -> Any: #мера сложности О(n)
        '''получить верхний элемент стека, но не удалять его'''



[Ссылка на мой код] [id_1]

Дополнительно тамже реализовал метод, получающий на вход открывающие и закрывающие скобки,
и определяющий насколько сбалансировано выражение.

Подготовлены тесты на основные методы. [Ссылка на код тестов] [id_2].


Проверил код с помощью линтера pylint.
Аннотацию типов проверил с помощью mypy. Оценены меры сложности основных методов

Также реализовал метод, вычисляющий выражение в постфиксной записи. [Ссылка на код] [id_3].



