---
layout: post
title:  "Упорядоченный список(изучаю структуры данных)"
date:   2022-02-10 00:00:00 +0000
categories: python algorithms
---
[id_1]: https://github.com/NikLaz25/Algorithms_1/blob/main/OrderedList_1.py
[id_2]: https://github.com/NikLaz25/Algorithms_1/blob/main/OrderedList_test.py

Осваиваю упорядоченный список.
Фишка в том, что список хранит элементы по возрастанию или убыванию, в зависимости от входного булевого значения
За основу берем двунаправленный связанный список.

Проработаны следующие методы:
* def__init__(self,asc):
    '''конструктор'''

* def compare(self,v1,v2):
    '''метод сравнения значений'''

* def add(self,value):
    '''автоматическая вставка value в нужную позицию'''
	'''вставка в пустой список'''
	'''вставка в конец'''
	'''вставка в середину'''

*   def find(self,val):  # сложность в целом не поменялась О(n)
        '''Поиск значения в списке'''

*   def delete(self, val):
        '''Удаление значения из списка'''

*   def clean(self, asc):
        '''очистка списка'''

*   def len(self):
        '''Длина связанного списка'''

*   def get_all(self):
        '''метод получения списка узлов'''

*   def LinkedList_in_List(self):
        '''Вспомогательный метод для тестирования.
        Выводит значения связанного списка в обычный список'''

*   def print_all_nodes(self):
        '''Печать значений всех узлов'''

* class OrderedStringList(OrderedList):
    '''Дочерний класс упорядоченного списка для работы со строками'''
*     def compare(self, v1, v2):
        ''' переопределённая версия метода compare для строк'''


[Ссылка на мой код] [id_1]


[Ссылка на тесты] [id_2]




