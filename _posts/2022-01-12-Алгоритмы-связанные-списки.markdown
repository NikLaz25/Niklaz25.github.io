---
layout: post
title:  "Изучаю алгоритмы. Связанные списки"
date:   2022-01-12 00:00:00 +0300
categories: python algorithms
---

Короткий конспект освоения темы Алгоритмы, Динамические структуры данных:
Определение алгоритма. Что такое алгоритмическое мышление, понятие детерминированного алгоритма, корректного алгоритма.

Ассимптотический анализ:
	Понятия алгоритм, вычислительная (математическая) модель.
	Оценка сложности алгоритма:
	О-большое (верхняя оценка)
	о-малое (средняя оценка)
	Омега (нижняя оценка)
	Тета (точная оценка сложности)

Классические меры сложности:

	О(1) - характерно для получения элемента по индексу. Супер.
	О(n) Норм
	O(log n) Норм
	O(n*log n) - удовлетворительная сложность
	O(n * n) и т.д. -  - характерно для вложенных циклов. Неудовлетворительная сложность - всё переделать.
	
Библиотека ctypes для работы с адресуемой областью памяти.

Связанный список - цепочка узлов
Что такое связанный список, узел, указатели
Отличия от массива
Список иммутабелен

Что сделал

	'''Класс Node определяет узел'''
	'''Класс LinkedList задаёт связанный список'''
	Метод__init__'''Инициируем указатели'''
	Метод'''Добавляем значение в список'''
	Метод'''Печать значений всех узлов'''
	Метод'''Поиск значения в списке'''
	Метод'''Поиск всех значений в списке'''
	Метод'''Удалить значение'''
	Метод'''Очистить список'''
	Метод'''Длина списка'''
	Метод'''Вставить значение'''
	'''Вспомогательный метод для тестирования.
        Выводит значения связанного списка в обычный список'''

Мой код '''Работа со связанным списком''' :

  https://github.com/NikLaz25/Algorithms_1/blob/main/LinkedList_5.py

Отдельно проверено на линтере pylint

Код  '''проверочные тесты''':

https://github.com/NikLaz25/Algorithms_1/blob/main/LinkedList_test_5.py


P.S. Пришлось конкретно вспомнить основы по ООП. Наконец-то!) 